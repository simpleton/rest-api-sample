package models

// This ***REMOVED***le was generated by the swagger tool.
// Editing this ***REMOVED***le might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-swagger/go-swagger/strfmt"

	"github.com/go-swagger/go-swagger/errors"
	"github.com/go-swagger/go-swagger/httpkit/validate"
***REMOVED***

/*EmailLogin email login

swagger:model emailLogin
*/
type EmailLogin struct {

	/* email
	 */
	Email *string `json:"email,omitempty"`

	/* password

	Required: true
	*/
	Password string `json:"password"`

	/* rkey

	Required: true
	*/
	Rkey string `json:"rkey"`
}

// Validate validates this email login
func (m *EmailLogin***REMOVED*** Validate(formats strfmt.Registry***REMOVED*** error {
	var res []error

	if err := m.validatePassword(formats***REMOVED***; err != nil {
		// prop
		res = append(res, err***REMOVED***
	}

	if err := m.validateRkey(formats***REMOVED***; err != nil {
		// prop
		res = append(res, err***REMOVED***
	}

	if len(res***REMOVED*** > 0 {
		return errors.CompositeValidationError(res...***REMOVED***
	}
	return nil
}

func (m *EmailLogin***REMOVED*** validatePassword(formats strfmt.Registry***REMOVED*** error {

	if err := validate.RequiredString("password", "body", string(m.Password***REMOVED******REMOVED***; err != nil {
		return err
	}

	return nil
}

func (m *EmailLogin***REMOVED*** validateRkey(formats strfmt.Registry***REMOVED*** error {

	if err := validate.RequiredString("rkey", "body", string(m.Rkey***REMOVED******REMOVED***; err != nil {
		return err
	}

	return nil
}
